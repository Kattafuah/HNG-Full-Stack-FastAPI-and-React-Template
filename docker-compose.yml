version: '3.7'       

services:
  frontend:
    build: ./frontend
    networks:        
      - web

  backend:
    build: ./backend
    environment:
      - DATABASE_URL=postgresql://app:changethis123@postgres/app
    networks:
      - web
    depends_on:
      - postgres
    command: >
      sh -c "
      until pg_isready -h postgres -p 5432; do
        echo 'Waiting for PostgreSQL to be ready...';
        sleep 2;
      done;
      poetry run bash ./prestart.sh && poetry run uvicorn app.main:app --reload
      "

  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: app
      POSTGRES_PASSWORD: changethis123
      POSTGRES_DB: app
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - web
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app"]
      interval: 10s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer
    ports:
      - 8080:8080
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    networks:
      - web

  proxy-manager:
    image: jc21/nginx-proxy-manager:latest
    ports:
      - 80:80
      - 443:443
      - 8090:81  # For accessing NPM UI
    environment:
      DB_MYSQL_HOST: db
      DB_MYSQL_PORT: 3306
      DB_MYSQL_USER: npm
      DB_MYSQL_PASSWORD: npm
      DB_MYSQL_NAME: npm
    networks:
      - web
    volumes:
      - ./data:/data
      - ./letsencrypt:/etc/letsencrypt

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    networks:
      - web
    depends_on:
      - frontend
      - backend

volumes:
  postgres_data:

networks:
  web:
    driver: bridge
